# -*- coding: utf-8 -*-

from ..tre_elements import TREExtension, TREElement

__classification__ = "UNCLASSIFIED"
__author__ = "Thomas McCullough"


class CMETAAType(TREElement):
    def __init__(self, value):
        super(CMETAAType, self).__init__()
        self.add_field('RELATED_TRES', 'd', 2, value)
        self.add_field('ADDITIONAL_TRES', 's', 120, value)
        self.add_field('RD_PRC_NO', 's', 12, value)
        self.add_field('IF_PROCESS', 's', 4, value)
        self.add_field('RD_CEN_FREQ', 's', 4, value)
        self.add_field('RD_MODE', 's', 5, value)
        self.add_field('RD_PATCH_NO', 'd', 4, value)
        self.add_field('CMPLX_DOMAIN', 's', 5, value)
        self.add_field('CMPLX_MAG_REMAP_TYPE', 's', 4, value)
        self.add_field('CMPLX_LIN_SCALE', 'd', 7, value)
        self.add_field('CMPLX_AVG_POWER', 'd', 7, value)
        self.add_field('CMPLX_LINLOG_TP', 'd', 5, value)
        self.add_field('CMPLX_PHASE_QUANT_FLAG', 's', 3, value)
        self.add_field('CMPLX_PHASE_QUANT_BIT_DEPTH', 'd', 2, value)
        self.add_field('CMPLX_SIZE_1', 'd', 2, value)
        self.add_field('CMPLX_IC_1', 'd', 2, value)
        self.add_field('CMPLX_SIZE_2', 'd', 2, value)
        self.add_field('CMPLX_IC_2', 'd', 2, value)
        self.add_field('CMPLX_IC_BPP', 'd', 5, value)
        self.add_field('CMPLX_WEIGHT', 's', 3, value)
        self.add_field('CMPLX_AZ_SLL', 'd', 2, value)
        self.add_field('CMPLX_RNG_SLL', 'd', 2, value)
        self.add_field('CMPLX_AZ_TAY_NBAR', 'd', 2, value)
        self.add_field('CMPLX_RNG_TAY_NBAR', 'd', 2, value)
        self.add_field('CMPLX_WEIGHT_NORM', 's', 3, value)
        self.add_field('CMPLX_SIGNAL_PLANE', 's', 1, value)
        self.add_field('IF_DC_SF_ROW', 'd', 6, value)
        self.add_field('IF_DC_SF_COL', 'd', 6, value)
        self.add_field('IF_PATCH_1_ROW', 'd', 6, value)
        self.add_field('IF_PATCH_1_COL', 'd', 6, value)
        self.add_field('IF_PATCH_2_ROW', 'd', 6, value)
        self.add_field('IF_PATCH_2_COL', 'd', 6, value)
        self.add_field('IF_PATCH_3_ROW', 'd', 6, value)
        self.add_field('IF_PATCH_3_COL', 'd', 6, value)
        self.add_field('IF_PATCH_4_ROW', 'd', 6, value)
        self.add_field('IF_PATCH_4_COL', 'd', 6, value)
        self.add_field('IF_PATCH_4_COL', 'd', 6, value)
        self.add_field('IF_DC_IS_ROW', 'd', 8, value)
        self.add_field('IF_DC_IS_COL', 'd', 8, value)
        self.add_field('IF_IMG_ROW_DC', 'd', 8, value)
        self.add_field('IF_IMG_COL_DC', 'd', 8, value)
        self.add_field('IF_TILE_1_ROW', 'd', 6, value)
        self.add_field('IF_TILE_1_COL', 'd', 6, value)
        self.add_field('IF_TILE_2_ROW', 'd', 6, value)
        self.add_field('IF_TILE_2_COL', 'd', 6, value)
        self.add_field('IF_TILE_3_ROW', 'd', 6, value)
        self.add_field('IF_TILE_3_COL', 'd', 6, value)
        self.add_field('IF_TILE_4_ROW', 'd', 6, value)
        self.add_field('IF_TILE_4_COL', 'd', 6, value)
        self.add_field('IF_RD', 's', 1, value)
        self.add_field('IF_RGWLK', 's', 1, value)
        self.add_field('IF_KEYSTN', 's', 1, value)
        self.add_field('IF_LINSFT', 's', 1, value)
        self.add_field('IF_SUBPATCH', 's', 1, value)
        self.add_field('IF_GEODIST', 's', 1, value)
        self.add_field('IF_RGFO', 's', 1, value)
        self.add_field('IF_BEAM_COMP', 's', 1, value)
        self.add_field('IF_RGRES', 'd', 8, value)
        self.add_field('IF_AZRES', 'd', 8, value)
        self.add_field('IF_RSS', 'd', 8, value)
        self.add_field('IF_AZSS', 'd', 8, value)
        self.add_field('IF_RSR', 'd', 8, value)
        self.add_field('IF_AZSR', 'd', 8, value)
        self.add_field('IF_RFFT_SAMP', 'd', 7, value)
        self.add_field('IF_AZFFT_SAMP', 'd', 7, value)
        self.add_field('IF_RFFT_TOT', 'd', 7, value)
        self.add_field('IF_AZFFT_TOT', 'd', 7, value)
        self.add_field('IF_SUBP_ROW', 'd', 6, value)
        self.add_field('IF_SUBP_COL', 'd', 6, value)
        self.add_field('IF_SUB_RG', 'd', 4, value)
        self.add_field('IF_SUB_AZ', 'd', 4, value)
        self.add_field('IF_RFFTS', 's', 1, value)
        self.add_field('IF_AFFTS', 's', 1, value)
        self.add_field('IF_RANGE_DATA', 's', 7, value)
        self.add_field('IF_INCPH', 's', 1, value)
        self.add_field('IF_SR_NAME1', 's', 8, value)
        self.add_field('IF_SR_AMOUNT1', 'd', 8, value)
        self.add_field('IF_SR_NAME2', 's', 8, value)
        self.add_field('IF_SR_AMOUNT2', 'd', 8, value)
        self.add_field('IF_SR_NAME3', 's', 8, value)
        self.add_field('IF_SR_AMOUNT', 'd', 8, value)
        self.add_field('AF_TYPE1', 's', 5, value)
        self.add_field('AF_TYPE2', 's', 5, value)
        self.add_field('AF_TYPE3', 's', 5, value)
        self.add_field('POL_TR', 's', 1, value)
        self.add_field('POL_RE', 's', 1, value)
        self.add_field('POL_REFERENCE', 's', 40, value)
        self.add_field('POL', 's', 1, value)
        self.add_field('POL_REG', 's', 1, value)
        self.add_field('POL_ISO_1', 'd', 5, value)
        self.add_field('POL_BAL', 's', 1, value)
        self.add_field('POL_BAL_MAG', 'd', 8, value)
        self.add_field('POL_BAL_PHS', 'd', 8, value)
        self.add_field('POL_HCOMP', 's', 1, value)
        self.add_field('POL_HCOMP_BASIS', 's', 10, value)
        self.add_field('POL_HCOMP_COEF_1', 'd', 9, value)
        self.add_field('POL_HCOMP_COEF_2', 'd', 9, value)
        self.add_field('POL_HCOMP_COEF_3', 'd', 9, value)
        self.add_field('POL_AFCOMP', 'd', 1, value)
        self.add_field('POL_SPARE_A', 's', 15, value)
        self.add_field('POL_SPARE_N', 'd', 9, value)
        self.add_field('T_UTC_YYYYMMMDD', 's', 9, value)
        self.add_field('T_HHMMSSUTC', 'd', 6, value)
        self.add_field('T_HHMMSSLOCAL', 's', 6, value)
        self.add_field('CG_SRAC', 'd', 11, value)
        self.add_field('CG_SLANT_CONFIDENCE', 'd', 7, value)
        self.add_field('CG_CROSS', 'd', 11, value)
        self.add_field('CG_CROSS_CONFIDENCE', 'd', 7, value)
        self.add_field('CG_CAAC', 'd', 9, value)
        self.add_field('CG_CONE_CONFIDENCE', 'd', 6, value)
        self.add_field('CG_GPSAC', 'd', 8, value)
        self.add_field('CG_GPSAC_CONFIDENCE', 'd', 6, value)
        self.add_field('CG_SQUINT', 'd', 8, value)
        self.add_field('CG_GAAC', 'd', 7, value)
        self.add_field('CG_GAAC_CONFIDENCE', 'd', 6, value)
        self.add_field('CG_INCIDENT', 'd', 7, value)
        self.add_field('CG_SLOPE', 'd', 7, value)
        self.add_field('CG_TILT', 'd', 8, value)
        self.add_field('CG_LD', 's', 1, value)
        self.add_field('CG_NORTH', 'd', 8, value)
        self.add_field('CG_NORTH_CONFIDENCE', 'd', 6, value)
        self.add_field('CG_EAST', 'd', 8, value)
        self.add_field('CG_RLOS', 'd', 8, value)
        self.add_field('CG_LOS_CONFIDENCE', 'd', 6, value)
        self.add_field('CG_LAYOVER', 'd', 8, value)
        self.add_field('CG_SHADOW', 'd', 8, value)
        self.add_field('CG_OPM', 'd', 7, value)
        self.add_field('CG_MODEL', 's', 5, value)
        self.add_field('CG_AMPT_X', 'd', 13, value)
        self.add_field('CG_AMPT_Y', 'd', 13, value)
        self.add_field('CG_AMPT_Z', 'd', 13, value)
        self.add_field('CG_AP_CONF_XY', 'd', 6, value)
        self.add_field('CG_AP_CONF_Z', 'd', 6, value)
        self.add_field('CG_APCEN_X', 'd', 13, value)
        self.add_field('CG_APCEN_Y', 'd', 13, value)
        self.add_field('CG_APCEN_Z', 'd', 13, value)
        self.add_field('CG_APER_CONF_XY', 'd', 6, value)
        self.add_field('CG_APER_CONF_Z', 'd', 6, value)
        self.add_field('CG_FPNUV_X', 'd', 9, value)
        self.add_field('CG_FPNUV_Y', 'd', 9, value)
        self.add_field('CG_FPNUV_Z', 'd', 9, value)
        self.add_field('CG_IDPNUVX', 'd', 9, value)
        self.add_field('CG_IDPNUVY', 'd', 9, value)
        self.add_field('CG_IDPNUVZ', 'd', 9, value)
        self.add_field('CG_SCECN_X', 'd', 13, value)
        self.add_field('CG_SCECN_Y', 'd', 13, value)
        self.add_field('CG_SCECN_Z', 'd', 13, value)
        self.add_field('CG_SC_CONF_XY', 'd', 6, value)
        self.add_field('CG_SC_CONF_Z', 'd', 6, value)
        self.add_field('CG_SWWD', 'd', 8, value)
        self.add_field('CG_SNVEL_X', 'd', 10, value)
        self.add_field('CG_SNVEL_Y', 'd', 10, value)
        self.add_field('CG_SNVEL_Z', 'd', 10, value)
        self.add_field('CG_SNACC_X', 'd', 10, value)
        self.add_field('CG_SNACC_Y', 'd', 10, value)
        self.add_field('CG_SNACC_Z', 'd', 10, value)
        self.add_field('CG_SNATT_ROLL', 'd', 8, value)
        self.add_field('CG_SNATT_PITCH', 'd', 8, value)
        self.add_field('CG_SNATT_YAW', 'd', 8, value)
        self.add_field('CG_GTP_X', 'd', 9, value)
        self.add_field('CG_GTP_Y', 'd', 9, value)
        self.add_field('CG_GTP_Z', 'd', 9, value)
        self.add_field('CG_MAP_TYPE', 's', 4, value)
        if self.CG_MAP_TYPE == 'GEOD':
            self.add_field('CG_PATCH_LATCEN', 'd', 11, value)
            self.add_field('CG_PATCH_LNGCEN', 'd', 12, value)
            self.add_field('CG_PATCH_LTCORUL', 'd', 11, value)
            self.add_field('CG_PATCH_LGCORUL', 'd', 12, value)
            self.add_field('CG_PATCH_LTCORUR', 'd', 11, value)
            self.add_field('CG_PATCH_LGCORUR', 'd', 12, value)
            self.add_field('CG_PATCH_LTCORLR', 'd', 11, value)
            self.add_field('CG_PATCH_LGCORLR', 'd', 12, value)
            self.add_field('CG_PATCH_LTCORLL', 'd', 11, value)
            self.add_field('CG_PATH_LNGCOLL', 'd', 12, value)
            self.add_field('CG_PATCH_LAT_CONFIDENCE', 'd', 9, value)
            self.add_field('CG_PATCH_LONG_CONFIDENCE', 'd', 9, value)
        elif self.CG_MAP_TYPE == 'MGRS':
            self.add_field('CG_MGRS_CENT', 's', 23, value)
            self.add_field('CG_MGRSCORUL', 's', 23, value)
            self.add_field('CG_MGRSCORUR', 's', 23, value)
            self.add_field('CG_MGRSCORLR', 's', 23, value)
            self.add_field('CG_MGRCORLL', 's', 23, value)
            self.add_field('CG_MGRS_CONFIDENCE', 'd', 7, value)
            self.add_field('CG_MGRS_PAD', 's', 11, value)
        elif self.CG_MAP_TYPE == 'NA':
            self.add_field('CG_MAP_TYPE_BLANK', 's', 133, value)
        self.add_field('CG_SPARE_A', 's', 144, value)
        self.add_field('CA_CALPA', 'd', 7, value)
        self.add_field('WF_SRTFR', 'd', 14, value)
        self.add_field('WF_ENDFR', 'd', 14, value)
        self.add_field('WF_CHRPRT', 'd', 10, value)
        self.add_field('WF_WIDTH', 'd', 9, value)
        self.add_field('WF_CENFRQ', 'd', 13, value)
        self.add_field('WF_BW', 'd', 13, value)
        self.add_field('WF_PRF', 'd', 7, value)
        self.add_field('WF_PRI', 'd', 9, value)
        self.add_field('WF_CDP', 'd', 7, value)
        self.add_field('WF_NUMBER_OF_PULSES', 'd', 9, value)
        self.add_field('VPH_COND', 's', 1, value)


class CMETAA(TREExtension):
    _tag_value = 'CMETAA'
    _data_type = CMETAAType
